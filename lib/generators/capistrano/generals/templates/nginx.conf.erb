#         Upstreams
##############################
<% if fetch(:use_unicorn) %>
upstream unicorn_<%= fetch(:nginx_config_name) %> {
  server unix:/tmp/unicorn.<%= fetch(:nginx_config_name) %>.sock fail_timeout=<%= fetch(:nginx_fail_timeout) %>;
}
<% end %>
<% if fetch(:use_puma) %>
upstream puma_<%= fetch(:nginx_config_name) %> {
  server unix:/tmp/puma.<%= fetch(:nginx_config_name) %>.sock fail_timeout=<%= fetch(:nginx_fail_timeout) %>;
}
<% end %>

#          Redirects
##############################
<% if fetch(:nginx_redirect_www) %>
server {
  listen 80;
  server_name www.<%= fetch(:server_domain) %>;
  return 301 https://<%= fetch(:server_domain) %>$request_uri;
}
<% end %>
<% if fetch(:nginx_use_ssl) %>
server {
  listen 80;
  server_name <%= fetch(:server_domain) %>;
  rewrite ^(.*) https://$host$1 permanent;
}
<% end %>

#          Server
##############################
server {
  server_name <%= fetch(:server_domain) %>;
  root <%= current_path %>/public;

  client_max_body_size 4G;
  keepalive_timeout 10;

  error_page 500 502 504 /500.html;

  # SSL Settings
  <% if fetch(:nginx_use_ssl) %>
  listen 443 ssl;
  ssl_certificate <%= nginx_ssl_cert_file %>;
  ssl_certificate_key <%= nginx_ssl_cert_key_file %>;

  ssl_ciphers <%= fetch(:nginx_ssl_ciphers) %>;
  ssl_protocols <%= fetch(:nginx_ssl_protocols) %>;
  ssl_session_cache <%= fetch(:nginx_ssl_session_cache) %>;

  <% if fetch(:nginx_ssl_stapling) %>
  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 8.8.4.4 8.8.8.8 valid=300s;
  resolver_timeout 10s;
  <% end %>

  <% if fetch(:nginx_server_ciphers) %>
  ssl_prefer_server_ciphers on;
  ssl_dhparam <%= nginx_ssl_dhparam_file %>;
  <% end %>

  <% else %>
  listen 80;
  <% end %>

  <% # FILE HANDLING %>
  <% if fetch(:use_unicorn) %>
  try_files $uri/index.html $uri @unicorn_<%= fetch(:nginx_config_name) %>;

  location @unicorn_<%= fetch(:nginx_config_name) %> {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    <% if fetch(:nginx_use_ssl) %>
    proxy_set_header X-Forwarded-Proto https;
    <% end %>
    proxy_pass http://unicorn_<%= fetch(:nginx_config_name) %>;
    }
  <% end %>

  <% if fetch(:use_puma) %>
  try_files $uri/index.html $uri @puma_<%= fetch(:nginx_config_name) %>;

  location @unicorn_<%= fetch(:nginx_config_name) %> {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    <% if fetch(:nginx_use_ssl) %>
    proxy_set_header X-Forwarded-Proto https;
    <% end %>
    proxy_pass http://puma_<%= fetch(:nginx_config_name) %>;
    }
  <% end %>

  location ~* ^/assets/ {
    # Per RFC2616 - 1 year maximum expiry
    expires 1y;
    add_header Cache-Control public;

    # Some browsers still send conditional-GET requests if there's a
    # Last-Modified header or an ETag header even if they haven't
    # reached the expiry date sent in the Expires header.
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  keepalive_timeout 10;

}
